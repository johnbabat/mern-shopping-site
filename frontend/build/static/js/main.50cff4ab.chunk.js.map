{"version":3,"sources":["components/Product.js","redux/constants/productConstants.js","screens/HomeScreen.js","redux/actions/productActions.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","screens/ProductScreen.js","components/Cartitem.js","screens/CartScreen.js","components/Navbar.js","components/Backdrop.js","components/SideDrawer.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/cartReducers.js","redux/reducers/productReducers.js","index.js"],"names":["Product","id","name","price","imageUrl","description","className","src","alt","substring","to","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCTS_DETAILS_RESET","HomeScreen","dispatch","useDispatch","productsInState","useSelector","state","getProducts","products","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","addCart","qty","getState","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","ProductScreen","match","history","useState","setQty","productInState","getProductDetails","params","value","onChange","e","target","Array","keys","x","onClick","push","Cartitem","item","qtyChangeHandler","removeItemHandler","CartScreen","removeFromCart","length","reduce","Number","num","numStr","String","setCommas","n","slice","split","formatNum","toFixed","Navbar","click","Backdrop","SideDrawer","show","App","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50cff4ab.chunk.js","sourcesContent":["import './Product.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Product({id, name, price, imageUrl, description}) {\r\n    return (\r\n        <div className=\"product\">\r\n            <img \r\n                src={imageUrl}\r\n                alt={name}\r\n            />\r\n\r\n            <div className=\"product_info\">\r\n                <p className=\"info_name\">{name}</p>\r\n                <p>\r\n                    {description.substring(0,80)}...\r\n                </p>\r\n\r\n                <p className=\"info_price\">${price}</p>\r\n\r\n                < Link to={`/product/${id}`} className=\"info_button\">\r\n                    View\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCTS_DETAILS_RESET = \"GET_PRODUCTS_DETAILS_RESET\";","import './HomeScreen.css';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// Componenets\r\nimport Product from '../components/Product';\r\n\r\n// Actions\r\nimport { getProducts as listProducts } from '../redux/actions/productActions';\r\n\r\nfunction HomeScreen() {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const productsInState = useSelector(state => state.getProducts);\r\n    const { products, loading, error } = productsInState;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n     return (\r\n         <div className=\"homescreen\">\r\n            <h2 className=\"homescreen_title\">Latest Products</h2>\r\n\r\n            <div className=\"homescreen_products\">\r\n                {loading ? <h2>Loading...</h2> \r\n                : error ? <h2>{error}</h2> \r\n                : products.map(product => (\r\n                    < Product\r\n                        key={product._id}\r\n                        id={product._id}\r\n                        name={product.name}\r\n                        imageUrl={product.imageUrl}\r\n                        description={product.description}\r\n                        price={product.price}\r\n                    />\r\n                )\r\n                )}\r\n            </div>             \r\n         </div>\r\n     )\r\n }\r\n \r\n export default HomeScreen\r\n ","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({type: actionTypes.GET_PRODUCTS_REQUEST});\r\n\r\n        const { data } = await axios.get(\"/api/products\");\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({type: actionTypes.GET_PRODUCT_DETAILS_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCTS_DETAILS_RESET\r\n    })\r\n}","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM CART\"\r\nexport const CART_RESET = \"CART_RESET\";","import * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addCart = (id, qty) => async(dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            imageUrl: data.imageUrl,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};","import './ProductScreen.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Actions\r\nimport { getProductDetails } from'../redux/actions/productActions';\r\nimport { addCart } from '../redux/actions/cartActions';\r\n\r\n\r\nfunction ProductScreen({match, history}) {\r\n\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productInState = useSelector(state => state.getProductDetails)\r\n\r\n    const { loading, error, product } = productInState;\r\n    \r\n    useEffect(() => {\r\n        if (product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id));\r\n        }\r\n    }, [dispatch, product, match])\r\n\r\n    const addToCarthandler = () => {\r\n        dispatch(addCart(product._id, qty))\r\n        history.push(\"/cart\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"productscreen\">\r\n            {loading ? <h2>Loading...</h2>\r\n            : error ? <h2>{error}</h2>\r\n            : (\r\n                <>\r\n                <div className=\"productscreen_left\">\r\n                    <div className=\"left_image\">\r\n                        <img src={product.imageUrl}\r\n                            alt={product.name}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"left_info\">\r\n                        <p className=\"left_name\">{product.name}</p>\r\n                        <p>Price: ${product.price}</p>\r\n                        <p>{product.description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"productscreen_right\">\r\n                    <div className=\"right_info\">\r\n                        <p>\r\n                            Price: <span>${product.price}</span>\r\n                        </p>\r\n                        <p>\r\n                            Status: \r\n                            <span>\r\n                                {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                            </span>\r\n                        </p>\r\n                        <p>\r\n                            Qty\r\n                            <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                {[...Array(product.countInStock).keys()].map((x) => (\r\n                                    <option key={x+1} value={x+1}>\r\n                                        {x+1}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </p>\r\n                        <p>\r\n                            <button type=\"button\" onClick={addToCarthandler}>Add To Cart</button>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                </>\r\n            )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import './Cartitem.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Cartitem({ item, qtyChangeHandler, removeItemHandler }) {\r\n    \r\n    return (\r\n        <div className=\"cartitem\">\r\n            <img src={item.imageUrl}\r\n                alt={item.name}\r\n            />\r\n\r\n            <Link to={`/product/${item.product}`} className=\"cartitem_name\">\r\n                <p>{item.name}</p>\r\n            </Link>\r\n\r\n            <p className=\"cartitem_price\">${item.price}</p>\r\n            \r\n            <select\r\n                className=\"cartitem_select\"\r\n                value={item.qty}\r\n                onChange={(e) => qtyChangeHandler(item.product, e.target.value)}\r\n            >\r\n                {[...Array(item.countInStock).keys()].map((x) => (\r\n                    <option key={x+1} value={x+1}>\r\n                        {x+1}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            \r\n            <button onClick={() => removeItemHandler(item.product)} className=\"cartitem_deleteBtn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cartitem\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './CartScreen.css';\r\n\r\n// Components\r\nimport Cartitem from '../components/Cartitem';\r\nimport { addCart, removeFromCart } from '../redux/actions/cartActions';\r\n\r\nfunction CartScreen() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addCart(id, qty));\r\n    }\r\n\r\n    const removeItemHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const getTotalItems = () => {\r\n        return cartItems.reduce((qty, item) => (qty + Number(item.qty)), 0)\r\n    }\r\n\r\n    const getTotalCost = () => {\r\n        return cartItems.reduce((price, item) => (price + (Number(item.qty) * item.price)), 0)\r\n    }\r\n\r\n    const formatNum = (num) => {\r\n        const numStr = String(num)\r\n\r\n        const setCommas = (n) => {\r\n            if (n.length < 4) {return n}\r\n            return setCommas(n.slice(0,-3)) + ',' + n.slice(-3) \r\n        }\r\n        return setCommas(numStr.split(\".\")[0]) + \".\" + numStr.split(\".\")[1]\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"cartscreen\">\r\n            {cartItems.length === 0 ? (\r\n                <div>\r\n                    Your cart is empty <Link to=\"/\">Go Back</Link>\r\n                </div>\r\n            )\r\n            : (\r\n                <>\r\n                <div className=\"cartscreen_left\">\r\n                    <h2>Shopping Cart</h2>                \r\n                    {cartItems.map(item => \r\n                        < Cartitem\r\n                            key={item.product}\r\n                            item={item}\r\n                            qtyChangeHandler={qtyChangeHandler}\r\n                            removeItemHandler={removeItemHandler}\r\n                        />)}\r\n                    \r\n                </div>\r\n                <div className=\"cartscreen_right\">\r\n                    <div className=\"cartscreen_info\">\r\n                        <p>\r\n                            Subtotal ({getTotalItems()}) items\r\n                        </p>\r\n                        <p>${formatNum(getTotalCost().toFixed(2))}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"button\">Proceed to Checkout</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Navbar({ click }) {\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const getTotalItems = () => {\r\n        return cartItems.reduce((qty, item) => (Number(item.qty) + qty), 0)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar_logo\">\r\n                <h2>MERN Shopping cart</h2>\r\n            </div>\r\n\r\n            <ul className=\"navbar_links\">\r\n                <li>\r\n                    <Link to='/cart' className=\"cart_link\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart\r\n                            <span className=\"cartlogo_badge\">{getTotalItems()}</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/'>\r\n                        Shop\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"hamburger_menu\" onClick={click}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './Backdrop.css';\r\n\r\nfunction Backdrop({ click }) {\r\n    return (\r\n        <div className=\"backdrop\" onClick={click}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop;","import './SideDrawer.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction SideDrawer({ show }) {\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const getTotalItems = () => {\r\n        return cartItems.reduce((qty, item) => (Number(item.qty) + qty), 0)\r\n    }\r\n\r\n    return (\r\n        <div className={`sidedrawer ${show && \"show\"}`}>\r\n            <div className = \"sidedrawer_header\">\r\n                <h2>MERN Shopping Cart</h2>\r\n            </div>\r\n            \r\n            <ul className=\"sidedrawer_links\">\r\n                <li>\r\n                    <Link to='/cart'>\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart\r\n                            <span className=\"drawer_cartlogo_badge\">{getTotalItems()}</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <hr/>\r\n                <li>\r\n                    <Link to='/'>\r\n                        Shop\r\n                    </Link>\r\n                </li>\r\n                <hr/>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideDrawer\r\n","import './App.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\n\n\n// Components\nimport Navbar from './components/Navbar'\nimport Backdrop from './components/Backdrop';\nimport SideDrawer from './components/SideDrawer';\n\nfunction App() {\n\n  const [sideToggle, setSideToggle] = useState(false)\n\n  return (\n    <Router>\n      <div className=\"app\">\n        < Navbar click={() => setSideToggle(true)}/>\n        < SideDrawer show={sideToggle}/>\n        {sideToggle && < Backdrop show={sideToggle} click={() => setSideToggle(false)} />}\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={HomeScreen}/>\n            <Route exact path=\"/product/:id\" component={ProductScreen}/>\n            <Route exact path=\"/cart\" component={CartScreen}/>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { getProductDetailsReducer, getProductsReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import * as actionTypes from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = {cartItems: []}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) =>\r\n                    x.product !== action.payload\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                product: {}\r\n            };\r\n        case actionTypes.GET_PRODUCTS_DETAILS_RESET:\r\n            return {\r\n                product: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}